trigger:
- master

pool:
  name: MyFreePool
  demands:
    - agent -equals agent2

variables:
  node_version: '18.x'

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '$(node_version)'
    displayName: 'Install Node.js'

  - script: |
      npm ci --no-audit --no-fund
    displayName: 'Install dependencies'

  - task: Cache@2
    inputs:
      key: 'npm | "$(Agent.OS)" | $(Build.SourcesDirectory)/package-lock.json'
      restoreKeys: |
        npm | "$(Agent.OS)"
      path: $(Build.SourcesDirectory)/node_modules
    displayName: 'Cache node_modules'
    continueOnError: true

  - script: npm test
    displayName: 'Run tests'

  - script: |
      echo "No build step needed for Express"
    displayName: 'Build step'

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Build.SourcesDirectory)'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/shopingkaro.zip'
      replaceExistingArchive: true
    displayName: 'Archive app'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)/shopingkaro.zip'
      artifactName: 'shopingkaro-app'
      publishLocation: 'Container'
    displayName: 'Publish artifact'

  - powershell: |
      Write-Host "Stopping existing Node processes if any..."
      Get-Process node -ErrorAction SilentlyContinue | Stop-Process -Force

      $deployPath = "C:\deploy\shopingkaro"
      if (Test-Path $deployPath) {
        Remove-Item -Recurse -Force $deployPath
      }
      New-Item -ItemType Directory -Path $deployPath

      Expand-Archive -Path "$(Build.ArtifactStagingDirectory)\shopingkaro.zip" -DestinationPath $deployPath -Force
      cd $deployPath
      npm install --omit=dev

      Write-Host "Starting application with: node index.js"
      Start-Process "node" "index.js"
    displayName: 'Deploy and start app on self-hosted Azure VM'
    condition: succeeded()
