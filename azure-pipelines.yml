trigger:
- master

pool:
  name: MyFreePool
  demands:
    - agent -equals agent2

variables:
  node_version: '18.x'
  deploy_port: '4000'

stages:
- stage: Install
  displayName: "Install Stage"
  jobs:
  - job: InstallNode
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '$(node_version)'
      displayName: 'Install Node.js'

    - script: npm ci --no-audit --no-fund
      displayName: 'Install dependencies'

- stage: Test
  displayName: "Test Stage"
  dependsOn: Install
  jobs:
  - job: RunTests
    steps:
    - task: Cache@2
      inputs:
        key: 'npm | "$(Agent.OS)" | $(Build.SourcesDirectory)/package-lock.json'
        restoreKeys: |
          npm | "$(Agent.OS)"
        path: $(Build.SourcesDirectory)/node_modules
      displayName: 'Cache node_modules'
      continueOnError: true

    - script: npm test
      displayName: 'Run tests'

- stage: Package
  displayName: "Package Stage"
  dependsOn: Test
  jobs:
  - job: ArchiveAndPublish
    steps:
    - script: echo "No build step needed for Express"
      displayName: 'Build step'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/shopingkaro.zip'
        replaceExistingArchive: true
      displayName: 'Archive app'

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)/shopingkaro.zip'
        artifactName: 'shopingkaro-app'
        publishLocation: 'Container'
      displayName: 'Publish artifact'

- stage: Deploy
  displayName: "Deploy Stage"
  dependsOn: Package
  jobs:
  - job: DeployWebApp
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        artifactName: 'shopingkaro-app'
        downloadPath: '$(Build.ArtifactStagingDirectory)'
      displayName: 'Download build artifact'

    - task: AzureWebApp@1
      inputs:
        azureSubscription: 'azure-rm-shopingkaro'
        appType: 'webApp'
        appName: 'shopingkaro-app-service'
        package: '$(Build.ArtifactStagingDirectory)/shopingkaro.zip'
      displayName: 'Deploy to Azure Web App'

- stage: Release
  displayName: "Release Stage"
  dependsOn: Deploy
  condition: succeeded()
  jobs:
  - deployment: NotifyRelease
    displayName: "Release Deployment"
    environment: Release 
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo " Application successfully released to production!"
            displayName: 'Release Confirmation'
