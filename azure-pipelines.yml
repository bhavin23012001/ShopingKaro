trigger:
  branches:
    include:
      - master
  paths:
    exclude:
      - azure-pipelines.yml
      - README.md
      - docs/**

pool:
  name: MyFreePool

variables:
  - name: node_version
    value: '18.x'
  - name: SCM_DO_BUILD_DURING_DEPLOYMENT
    value: false

stages:

# 1. Install Dependencies
- stage: Install
  displayName: "Install Dependencies"
  jobs:
  - job: InstallNode
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '$(node_version)'
      displayName: 'Install Node.js'

    - script: npm install
      displayName: 'Install all dependencies (including dotenv)'

    - script: npx playwright install --with-deps
      displayName: 'Install Playwright Browsers'

# 2. Test Stage
- stage: Test
  displayName: "Run Tests"
  dependsOn: Install
  jobs:
  - job: RunTests
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '$(node_version)'
      displayName: 'Install Node.js'

    - script: npm ci
      displayName: 'Reinstall dependencies'

    - script: |
        npm test || echo "No unit tests yet"
        npx playwright test --config=playwright.config.js --reporter=html || echo "E2E tests skipped or failed"
      displayName: 'Run Unit and E2E Tests'
      continueOnError: true

    - task: PublishBuildArtifacts@1
      condition: always()
      displayName: 'Publish Playwright Report'
      inputs:
        pathToPublish: 'playwright-report'
        artifactName: 'playwright-report'
        publishLocation: 'Container'

# 3. Package Stage
- stage: Package
  displayName: "Package App"
  dependsOn: Test
  jobs:
  - job: ArchiveAndPublish
    steps:
    - script: echo "Packaging Express app..."
      displayName: 'Log Packaging Start'

    - task: ArchiveFiles@2
      displayName: 'Archive app (include node_modules and .env)'
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/shopingkaro.zip'
        replaceExistingArchive: true
        archiveFilePatterns: |
          **/*
          !**/*.log

    - task: PublishBuildArtifacts@1
      displayName: 'Publish zipped app artifact'
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)/shopingkaro.zip'
        artifactName: 'shopingkaro-app'
        publishLocation: 'Container'

# 4. Manual Release Approval Stage
- stage: Release
  displayName: "Release Approval Stage"
  dependsOn: Package
  condition: succeeded()
  jobs:
  - deployment: NotifyRelease
    displayName: "Release Confirmation"
    environment:
      name: Release
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo "âœ… Application ready for production deployment."
            displayName: "Release Approval"

# 5. Deploy to Azure
- stage: Deploy
  displayName: "Deploy to Azure"
  dependsOn: Release
  jobs:
  - deployment: DeployToAzureAppService
    displayName: "Deploy Web App"
    environment:
      name: deployappr
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            displayName: "Download build artifact"
            inputs:
              artifactName: "shopingkaro-app"
              downloadPath: "$(Pipeline.Workspace)"

          - task: AzureWebApp@1
            displayName: "Deploy to Azure Web App"
            inputs:
              azureSubscription: "azure-rm-shopingkaro"
              appType: "webApp"
              appName: "shopingkaro-app-service"
              package: "$(Pipeline.Workspace)/shopingkaro-app/shopingkaro.zip"
